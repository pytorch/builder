name: Validate MacOS Binaries

on:
  pull_request:
    paths:
      - .github/workflows/validate-MacOS-binaries.yml


jobs:
  generate-ARM64-conda-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: macos-arm64
      channel: all
      test-infra-ref: weiwangmeta/add-macos-x86_64-support

  validate-MacOS-ARM64-conda-packages:
    needs: generate-ARM64-conda-matrix 
    runs-on: ${{ matrix.validation_runner }} 
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-ARM64-conda-matrix.outputs.matrix) }}
    env: 
      PYTHON_VERSION: ${{ matrix.python_version }} 
      INSTALLATION: ${{ matrix.installation }}
    steps:
      - name: Checkout PyTorch/Builder directory
        uses: actions/checkout@v3
      - name: Install Fresh Miniconda in Runner Temp Dir
        run: |
          set -ex
          cd ${{ runner.temp }}
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh
          sh Miniconda3-latest-MacOSX-arm64.sh -b -f  -p ${{ runner.temp }}
      - name: Conda Install pytorch and smoke test
        env:
          ENV_NAME: conda-env-${{ github.run_id }}
        run: |
          set -ex
          conda create -yp ${ENV_NAME} python=${PYTHON_VERSION} numpy
          conda run -p ${ENV_NAME} $INSTALLATION
          #cd ${GITHUB_WORKSPACE} 
          conda run -p ${ENV_NAME} python3 ${GITHUB_WORKSPACE}/test/smoke_test/smoke_test.py
          conda env remove -p ${ENV_NAME}

  generate-ARM64-wheel-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: wheel
      os: macos-arm64
      channel: all
      test-infra-ref: weiwangmeta/add-macos-x86_64-support

  validate-MacOS-wheels:
    needs: generate-ARM64-wheel-matrix
    runs-on: ${{ matrix.validation_runner }} 
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-ARM64-wheel-matrix.outputs.matrix) }}
    env: 
      PYTHON_VERSION: ${{ matrix.python_version }} 
      INSTALLATION: ${{ matrix.installation }}
    steps:
      - name: Checkout PyTorch/Builder directory
        uses: actions/checkout@v3
        with: 
          ref: weiwangmeta/testing_macos_nightly_wheels
      - name: Install Fresh Miniconda in Runner Temp Dir
        run: |
          set -ex
          cd ${{ runner.temp }}
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh
          sh Miniconda3-latest-MacOSX-arm64.sh -b -f  -p ${{ runner.temp }}
      - name: pip install pytorch and smoke test
        env:
          ENV_NAME: conda-env-${{ github.run_id }}
        run: |
          set -ex
          conda create -yp ${ENV_NAME} python=${PYTHON_VERSION} numpy
          conda run -p ${ENV_NAME} $INSTALLATION
          #cd ${GITHUB_WORKSPACE} 
          conda run -p ${ENV_NAME} python3 ${GITHUB_WORKSPACE}/test/smoke_test/smoke_test.py
          conda env remove -p ${ENV_NAME}

  generate-X86_64-conda-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: conda
      os: macos-x86_64
      channel: all
      test-infra-ref: weiwangmeta/add-macos-x86_64-support

  validate-MacOS-X86_64-conda-packages:
    needs: generate-X86_64-conda-matrix 
    runs-on: ${{ matrix.validation_runner }} 
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-X86_64-conda-matrix.outputs.matrix) }}
    env: 
      PYTHON_VERSION: ${{ matrix.python_version }} 
      INSTALLATION: ${{ matrix.installation }}
    steps:
      - name: Checkout PyTorch/Builder directory
        uses: actions/checkout@v3
      - name: Install Fresh Miniconda in Runner Temp Dir
        run: |
          set -ex
          rm -rf ${{ runner.temp }}/*
          cd ${{ runner.temp }}
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
          sh Miniconda3-latest-MacOSX-x86_64.sh -b -f  -p ${{ runner.temp }}
      - name: Conda Install pytorch and smoke test
        env:
          ENV_NAME: conda-env-${{ github.run_id }}
        run: |
          set -ex
          conda create -yp ${ENV_NAME} python=${PYTHON_VERSION} numpy
          conda run -p ${ENV_NAME} $INSTALLATION
          conda run -p ${ENV_NAME} python3 ${GITHUB_WORKSPACE}/test/smoke_test/smoke_test.py
          conda env remove -p ${ENV_NAME}

  generate-X86_64-wheel-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: wheel
      os: macos-x86_64
      channel: all
      test-infra-ref: weiwangmeta/add-macos-x86_64-support

  validate-MacOS-X86_64-wheels:
    needs: generate-X86_64-wheel-matrix
    runs-on: ${{ matrix.validation_runner }} 
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-X86_64-wheel-matrix.outputs.matrix) }}
    env: 
      PYTHON_VERSION: ${{ matrix.python_version }} 
      INSTALLATION: ${{ matrix.installation }}
    steps:
      - name: Checkout PyTorch/Builder directory
        uses: actions/checkout@v3
        with: 
          ref: weiwangmeta/testing_macos_nightly_wheels
      - name: Install Fresh Miniconda in Runner Temp Dir
        run: |
          set -ex
          cd ${{ runner.temp }}
          curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
          sh Miniconda3-latest-MacOSX-x86_64.sh -b -f  -p ${{ runner.temp }}
      - name: pip install pytorch and smoke test
        env:
          ENV_NAME: conda-env-${{ github.run_id }}
        run: |
          set -ex
          conda create -yp ${ENV_NAME} python=${PYTHON_VERSION} numpy
          conda run -p ${ENV_NAME} $INSTALLATION
          conda run -p ${ENV_NAME} python3 ${GITHUB_WORKSPACE}/test/smoke_test/smoke_test.py
          conda env remove -p ${ENV_NAME}
