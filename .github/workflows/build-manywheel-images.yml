name: Build manywheel docker images

on:
  push:
    branches:
      - main
      - release/*
    tags:
      # NOTE: Binary build pipelines should only get triggered on release candidate or nightly builds
      # Release candidate tags look like: v1.11.0-rc1
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
    paths:
      - .github/workflows/build-manywheel-images.yml
      - manywheel/Dockerfile
      - manywheel/Dockerfile_aarch64
      - manywheel/Dockerfile_cuda_aarch64
      - manywheel/Dockerfile_cxx11-abi
      - manywheel/build_docker.sh
      - 'common/*'
  pull_request:
    paths:
      - .github/workflows/build-manywheel-images.yml
      - manywheel/Dockerfile
      - manywheel/Dockerfile_aarch64
      - manywheel/Dockerfile_cuda_aarch64
      - manywheel/Dockerfile_cxx11-abi
      - 'common/*'
      - manywheel/build_docker.sh

env:
  DOCKER_REGISTRY: "docker.io"
  DOCKER_BUILDKIT: 1
  DOCKER_ID: ${{ secrets.DOCKER_ID }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  WITH_PUSH: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release')) }}

jobs:
  build-docker-cuda:
    runs-on: linux.12xlarge.ephemeral
    strategy:
      matrix:
        cuda_version: ["12.4", "12.1", "11.8"]
    env:
      GPU_ARCH_TYPE: cuda
      GPU_ARCH_VERSION: ${{ matrix.cuda_version }}
    steps:
      - name: Purge tools folder (free space for build)
        run: rm -rf /opt/hostedtoolcache
      - name: Checkout PyTorch builder
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
  build-docker-cuda-aarch64:
    runs-on: linux.arm64.2xlarge
    strategy:
      matrix:
        cuda_version: ["12.4"]
    env:
      GPU_ARCH_TYPE: cuda-aarch64
      GPU_ARCH_VERSION: ${{ matrix.cuda_version }}
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
  build-docker-rocm:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        rocm_version: ["6.0", "6.1"]
    env:
      GPU_ARCH_TYPE: rocm
      GPU_ARCH_VERSION: ${{ matrix.rocm_version }}
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
  build-docker-cpu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
  build-docker-cpu-aarch64:
    runs-on: linux.arm64.2xlarge
    env:
      GPU_ARCH_TYPE: cpu-aarch64
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
  build-docker-cpu-cxx11-abi:
    runs-on: ubuntu-22.04
    env:
      GPU_ARCH_TYPE: cpu-cxx11-abi
    steps:
      - name: Checkout PyTorch
        uses: actions/checkout@v3
      - name: Authenticate if WITH_PUSH
        run: |
          if [[ "${WITH_PUSH}" == true ]]; then
            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_ID}" --password-stdin
          fi
      - name: Build Docker Image
        run: |
          manywheel/build_docker.sh
