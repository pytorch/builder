name: Validate Windows binary images

on:
  workflow_call:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: string
      ref:
        description: 'Reference to checkout, defaults to empty'
        default: ""
        required: false
        type: string
      limit-win-builds:
        description: "Limit windows builds to single python/cuda config"
        default: "disable"
        type: string
  workflow_dispatch:
    inputs:
      channel:
        description: "Channel to use (nightly, test, release, all)"
        required: true
        type: choice
        options:
          - release
          - nightly
          - test
          - all
      ref:
        description: 'Reference to checkout, defaults to empty'
        default: ""
        required: false
        type: string
      limit-win-builds:
        description: "Limit windows builds to single python/cuda config"
        default: "disable"
        required: false
        type: string

jobs:
  generate-windows-matrix:
    uses: pytorch/test-infra/.github/workflows/generate_binary_build_matrix.yml@main
    with:
      package-type: all
      os: windows
      channel: ${{ inputs.channel }}
      limit-win-builds: ${{ inputs.limit-win-builds }}

  win:
    needs: generate-windows-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-windows-matrix.outputs.matrix) }}
      fail-fast: false
    uses: pytorch/test-infra/.github/workflows/windows_job.yml@main
    name: ${{ matrix.build_name }}
    with:
      runner: ${{ matrix.package_type == 'libtorch' && 'windows.4xlarge' || matrix.validation_runner }}
      repository: "pytorch/builder"
      ref: ${{ inputs.ref || github.ref }}
      job-name: ${{ matrix.build_name }}
      binary-matrix: ${{ toJSON(matrix) }}
      timeout: 60
      script: |
        set -ex
        export ENV_NAME="conda-env-${{ github.run_id }}"
        export TARGET_OS="windows"
        source /c/Jenkins/Miniconda3/etc/profile.d/conda.sh
        source ./.github/scripts/validate_binaries.sh
